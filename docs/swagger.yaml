definitions:
  models.Article:
    properties:
      description:
        type: string
      id:
        type: integer
      rate:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
  title: Article API ginSwagger
  version: "1.0"
paths:
  /api/v1/articles:
    get:
      description: Responds with the list of all articles as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/models.Article'
              type: array
            type: array
      summary: Get Article array
      tags:
      - article
    post:
      description: Takes a article JSON and store in DB. Return saved JSON.
      parameters:
      - description: Article JSON
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Post a new Article
      tags:
      - article
  /api/v1/articles/{id}:
    delete:
      description: Responds with JSON message.
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
      summary: Delete Article By id
      tags:
      - article
    get:
      description: Responds with the list of all article as JSON.
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "404":
          description: Not Found
          schema:
            type: json
      summary: Get Article By id
      tags:
      - article
    put:
      description: Takes a article JSON and store in DB. Return saved JSON.
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Article JSON
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Article'
      summary: Update an Article
      tags:
      - article
swagger: "2.0"
